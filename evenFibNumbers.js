/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

const evenFibNumbers = (input) => {
  const isEven = (value) => {
    // util func
    return value % 2 === 0; 
  };
  // input === 100
  let lastNumber = 1;
  let currentNumber = 2;
  let total = 2;
  // let nextNumber = 0;
  // while 2 < 100
  while (currentNumber < input) {
    // 3 = (1 + 2)
    let nextNumber = lastNumber + currentNumber;
    // console.log('nextNumber = ', nextNumber);
    if (nextNumber >= input) {
      console.log('BREAK! - ', total);
      return total;
    }
    if (isEven(nextNumber)){
      // console.log('adding ', nextNumber, ' to total - ', total, '...');
      total += nextNumber;
      // console.log('new total is - ', total);
    }
    lastNumber = currentNumber;
    // console.log('lastNumber = ', lastNumber);
    currentNumber = nextNumber;
    // console.log('currentNumber = ', currentNumber);
    // console.log('-----');
  }
  return total;
};

module.exports = evenFibNumbers;